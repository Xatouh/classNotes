que aplica en muchos ámbitos de nuestro mundo El primer... Así como la temática más relacionada con esto tiene que ver mucho con inteligencia artigiza de los métodos de entrenamiento, sobre todo en redes comunales son métodos numéricos que hay que implementar y mover a alguno de ellos Entonces básicamente acá va a haber herramientas y técnicas que es de resolución de problemas matemáticos utilizando esta técnica, por lo tanto mucho de programar algoritmos Ahora haciendo una muy programación con todos ustedes y en ZAC En específico en el curso vamos a ver temas, no sé estos métodos en aplicaciones específicas de la informática, más en general temas de inteligencia artificial, ciencia de datos, gráficos computacionales, simulación, videojuego ese va a ser el foco del curso en general No vamos a ver la incúdica, vamos a verla simplemente Vamos a ver cómo eso se lleva por ejemplo a una simulación o un gráfico a una revisabilización o un gráfico, etc. Vamos a ver métodos de descenso de gradiente pero cómo el método de descenso del gradiente se ocupe para optimizar los pesos en una red mundial para poder entregar ese va a ser el foco de cómo se va a abordar el curso Obviamente vamos a partir desde las cosas más básicas por ejemplo con errores, ahí vamos a ver que dependiendo del tipo de datos, por la precisión y todo ese tipo de cosas vamos a tener errores y esos errores después los vamos a arrastrar y lo que vamos a arrastrar no es que no hay problema y como podemos prevenir todo ese tipo de cosas pero la idea generando el curso es que está enfocado en temáticas y el curso de lo que ustedes van a hacer es la parte de informar y así bien lo pueden aplicar de lo que sea porque al final de cuenta es programación entonces esto construye el algoritmo pero lo vamos a ver en detalle en aplicaciones más clásicas

¿Qué más? Se enfatizará en la implementación computacional de estos métodos mediante herramientas de programación y software especializado Por eso lo objetivo del curso es comprender la importancia de los métodos numéricos en la informática aplicada, implementar técnicas numéricas de inteligencia artificial y organización automática aplicar algoritmos numéricos en la ciencia de datos en el análisis de grandes volumenes de información resolver problemas gráficos y físicos con simulaciones de videojuegos para ver cómo podemos dar tiempo a la ecuación y hacer más cobreadoramiento de algoritmos por ejemplo, para poder ponerlo en un videojuego ese tipo de cosas las va a mover acá

hacer una gráfica de físicos y simulaciones de videojuegos utilizar herramientas computacionales avanzadas en entornos profesionales para resolver problemas esos son como los dispositivos generadores del curso

¿Cuáles son las unidades? Unidades son las que se van a ver con la idea tentativa y con la información que pasa muy rápido la unidad 1 es todo lo que tiene que ver con introducción de los métodos numéricos en informática conceptos básicos, errores numéricos, representación numérica en computadores un impacto en cálculo avanzado, aplicaciones de modelamiento de datos y gráficos computacionales la unidad 2, resolución numérica de ecuaciones no lineales en inteligencia artificial metodos de búsqueda de raíces, aplicado en procesos de optimización y redes numerales implementación con modación en el Python para entrenar modelos de inteligencia artificial, método de intelatío y el ajuste para afilitar con el trícord del ver para acá

en la unidad 3, interpolación y ajuste de datos en este caso aplicado en ciencia de datos vamos a ver la parte conceptual y una aplicación en específico interpolación y regresión en análisis de datos, modelos predictivos la espara del concepto cubico aplicado en temas de visualización aplicación en procesamiento de grandes formes de datos, midirías de datos, etc.

ahí están también las semanas la unidad 4, diferenciación e integración numérica en simulación y videojuegos hay diferenciación numérica para cálculos motores gráficos métodos de integración aplicados a simulaciones físicas en videojuegos implementación en Junkie y motores de simulación en Python

la unidad 5, métodos numéricos para sistemas de ecuaciones gráficos computacionales resolución de sistemas de ecuaciones en renderizado, en animación 3D métodos iterativos para simulación en tiempo real, aplicación en gráficos basado en física computación paralela y unidad 6, unidad 6 final

última, en la unidad 11, solución numérica de ecuaciones diferenciales en modelos predictivos, ahí vamos a ver un método de Euler, Mungaku modelo de inteligencia artificial basado en seres temporales aplicación en predicción de comportamiento de sistemas complejos implementación en el interminio de simulación de datos y al rendizaje profundo nos dicen fíjale, van a ver todos los conceptos teóricos principales de los métodos numéricos en la aplicación de la informática tradicional de errores básicos, de desactivizar videojuegos, participación de los métodos, en general, como para aliar a utilizaciones de datos y datos de datos de datos de productos y... O sea, el objetivo del curso es que usted implemente algoritmos que resuelven estos problemas, más y más, pero la mayoría ya están resueltos ya están implementados, la idea es que cómo los pueden ocupar en el que se suman o cómo se hacen variaciones, porque al final cuando veamos el tema de visualización videojuegos, ese tipo de cosas, ahí vamos a tener que implementar o disfrutar cosas pero un poco acá, lo que dio del curso es hacerme bajada las cosas que me van a tocar en montarse el día a día si usted se va a deslarar la inteligencia artificial es importante que sepan cómo funcionan los métodos que se juzgan para finalizar los modelos es importante que sepan cómo funciona un backdrop aguecho aunque hay detrás del backdrop aguecho para entrar los pesos de una mente oral que es el descenso de ingrediente, cómo opera, cómo calcula la derivada cómo apariza los pesos, toda esa información que es relevante sabe no solamente implementar el algoritmo, ahí es un poco lo que dio y que además esto tenga una bajada en lo que ustedes van a hacer porque normalmente los métodos numéricos se ven como grandes métodos numéricos entonces en la esplime, en distintas cuestiones como ecuaciones, como algoritmos pero no con una aplicación real que hay detrás un poco el objetivo acá del curso es que podamos ver la aplicación en cuanto a la parte de la administratividad del curso me lo decía eso ya van a tener más claridad la próxima semana cuando Digo y yo definan cómo van a ser los dos dudas, consultas no hay dudas, no hay consultas esto lo van a subir después vamos a ir a todos los campesinos.

…

Entonces, esto cuando estamos hablando de números pequeños, representaciones que son básicas en el sistema no hay problemas pero cuando ya tenemos que construir simulaciones y vamos a traer un error en el tiempo esto puede ser cada vez más cambiado Lo bueno de la noticia es que hay formas de solucionar este tipo de problemas de forma básica de solucionarlo cambiando el tipo de gráficos a otra un poquito más compleja Pero esto es un tema recurrente e importante y acabamos de ver algunos ejemplos de eso Y cuando hablamos de simular cosas o entrenar modelos o construir gráficas computacionales Entonces, el arrastrar un error por muy pequeño que sea, imagínense al entrenar una red numeral en donde se entrenan estos modelos con muchos datos, con mucha época se hacen muchos cálculos, ese error de arrastre que inicialmente puede ser pequeño y después va creciendo y eso es fundamental poder atacar eso Entonces, lo entero de nosotros puede ser de 8 a 4 bytes con un bit de signo y un...

Entonces, si se fijan ahí tenemos la variabilidad que es el 15 y vamos a ver su representación en binario Ahí está la representación en binario de ese 15 Si volvemos al colegio, la representación de ese número, la población nos da 15 Ahí tenemos la representación de ese número Entonces, cuando hablamos del 15, el 14, o el menos 14 como en este caso con su representación son números fáciles, en cierto aspecto y dependiendo de la versión se pueden representar números y se puede representar el número mucho más grande que el que aparece ahí Ya pero a medida que el número va creciendo, su representación en formato binario es cada vez más compleja dependiendo del tamaño de las representaciones, como el nivel de error que vamos a tener Entonces, eso es relevante Veamos acá un ejemplo Fíjense acá, vamos a importar nuestra librería, en un byte y ahí la variable X, que va a ser un float 32 que es el 0 con la 1 que es un número y una precisión y una variable suma que también es un floatante 32 que va a ser el 0 y que vamos a hacer acá, vamos a hacer un float, vamos a ir integrando por un range de, en este caso, un millón Vamos a ir sumando, ¿cuánto nos debía dar esa suma?

0,1, sumado, 1 millón veces El valor esperado es 100 mil Fíjense, vamos a ir tirando sobre este range y vamos a ir sumando el valor de X que originalmente era 0,1, entonces vamos a ir sumando este 1 millón veces El valor esperado es 1 millón, y ahora vamos a ver cuál es el resultado obtenido, el esperado y cuál es el error absoluto Entonces, vamos a ir a esa celda

Nos dice que el resultado obtenido es 100958.3438 El valor esperado era 100 mil, y por tanto el error absoluto es 958.35 ¿Por qué no es que salía esa ronda? Por la representación Nos dice que el número uno representa, o sea, después vamos a ir al detalle de cómo se representa un floatant 32, un floatant 74, un entero, un binario, todo eso vamos a ir al detalle Pero este 0,1, por cierto, esta representación de floatant 32 es un número binario que tiene una cierta cantidad de... Y por lo tanto, como eso es acotado, la representación que yo tengo de ese número, en algún momento yo voy a tener que tucarla Por lo tanto, cuando yo vaya iterando, y cuando esto lo hago muchas veces, empiezo a arrastrar un error en la forma en que estoy representando ese número dado el tipo de datos con los que lo estoy definiendo Y como eso me genera un error, cada vez que yo voy iterando, estoy haciendo un error de arrastre que al final puede ser muy chico Inicialmente ese error puede ser muy chico, 0,1, 0,0,0,0,0,0,0,0,1, están muchos decimales más allá Pero cuando ese error, yo lo empiezo a sumar y lo hago un millón de veces, dos millones de veces, o muchas veces, pasan cosas como esta donde el error ya no es despreciable, ya es 958, es casi 1000, un valor de 100.000 y un error de 1.0.0.0 Entonces, este tipo de cosas son las que pasan y es lo que uno tiene que tratar de evitar Ya porque acá, no sé, estamos hablando de... podría ser cualquier cosa, podría ser una cantidad de imunes, plantas, noticias... Pero hay un error, y este es un error que uno al principio... uno dice, no sé, estoy haciendo un foro y estoy sumando un millón de veces 0,1 No te digas que no hay error, sí, pasa Ya porque la representación del número no me está restringida, por el tipo de datos que estoy ocupando Por la capacidad que ese tipo de datos me entrega y por lo tanto, cuando yo tengo un poco de generación, de todo este método que tengo que simular, que tengo que literar muchas veces Se producen este tipo de errores y como les digo en este caso, no es despreciable De 100.000, o hasta 100.000, o un millón, no es menor Entonces, para el análisis de este error dice, observamos que el número obtenido es diferente al esperado, debido a la programación del error de redondero En cálculos financieros, simulaciones científicas en nuevo juego, estos errores pueden acumularse y producir despecaciones significativas Imagínense un error de este tipo en un banco, donde todos los días hacemos iteraciones y nos equivocamos 958 pesos Pero todos los días, con un periodo de tiempo grande, es mucha plata Es como el típico ajuste sencillo, redondero que hace una empresa, que al final es asonar tan poco que se impaga Acá lo mismo, o sea, imagínense, si se arrepide esa acumulación del tiempo, es una cantidad real Eso es importante Pero la buena noticia es que hay formas de resolver este tipo de problemas, y se utilizan técnicas Lo más básico es darle una mayor precisión numérica Ahí estamos buscando un FLUAD 32, pero con un FLUAD 64, tenemos una representación mejor del número En caso de que tengamos que hacer muchas iteraciones, por lo tanto tenemos más margen para disminuir ese error de redondero Lo importante acá, es que tampoco es llegar y pasar de un FLUAD 32 a un FLUAD 64, pero es también entender la problemática que nosotros tenemos en esta Obviamente uno ocupa más memoria que otro, y no es trivial pasar de uno a otro Eso es importante Si sabemos que el proceso en el cual vamos a ocupar la variable requiere de una alta precisión, estamos obligados a usar números de mayor precisión o variable tipo de datos de mayor precisión Otras técnicas son redondero controlado que vamos viviendo, o reformulación de ecuaciones para mejorar la estabilidad número Hay técnicas de lo más básico de un FLUAD 32 y un FLUAD 64, hasta reformular nuestro algoritmo para mejorar el cárculo de estabilidad Errores como ese se dan en un montón de cosas Por ejemplo acá, como le digo, no vamos a entrar en detalles, pero los números decimales que son los del tipo flotante que conocemos, se representan por dos números enteros Cada uno tiene un bit de sitio, estamos representando el número flotante a través de una representación de dos números enteros que también tienen una representación en mirar Estamos arrastrando errores de uno a los otros Si es FLUAD con W, es lo mismo, pero algunos tienen más espacio en la martiza, pero básicamente un número flotante Aquí tenemos C igual a 1 dividido por 13, hacemos un print de C y el tipo 1 dice que es 033 periódico y es de tipo flotante Si yo sumo C más C más C, quiere llegar a darme? 1 ¿Quería llegar a darme? 1, pero debe ser radar 09 Si yo tengo 033 periódico y sumo 033 periódico más 033 periódico más 033 periódico, ¿quería llegar a darme? 1 ¿9.5? Periódico es 1 ¿Quiere hacer un pensamiento? 1 ¿Quería hacer un pensamiento? 1 ¿Quiere hacer un pensamiento? 1 ¿Quiere hacer un pensamiento? Si yo hago print de C más C más C, ¿quiere darme? 1 ¿Correcto? ¿Sabe su nombre? Sí, por la forma en que está guardado Y si hago D1 dividido por 7 y después sumo eso ¿Por qué? Si hago acá C igual 1 partido por 3, que es 033 periódico y después hago C más C más C me da 1 y cuando hago 1 dividido por 7 y después sumo 7 veces D me da 099 ¿Por qué no es así? Porque es como mucha memoria Pero se fija, ven el error y la diferencia que hay O sea, acá estoy haciendo lo mismo, solo acá tengo 1 dividido por 3, acá 1 dividido por 7, estoy tomando las tres veces C que hoy me da 1, entonces tomo 1 tercio por 1 tercio por 1 tercio pero cuando hago lo mismo con un séptimo y sumo 7 veces la variable me da 099 Y luego acá, problema de aproximación, problema de reanudación Y en cosas que uno podría decir, ¿cuál es la diferencia entre un tercio y un séptimo? Nos parece muy grande pero si se fijan, hay un problema y una diferencia importante cuando tengamos que simular y esto lo que tiene los mitches, mitches integradamente en el tiempo

Y acá, 0,1 más 0,1 más 0,1 El tibio problema El tibio problema El tibio problema 0,3 debería ser 0,3, 0,0,0,0,0,0,0,0,0,4 Guay Entonces al final de cuenta Esto es algo que en el día a día uno lo deja pasar pero hay tareas que especifican que ustedes van a tener que tener mucho porque ese 4 que aparece ahí al final, si lo queramos, millones de veces que puede pasar cuando uno trena una red neuronal, le pasa miles de imágenes y hay millones de parámetros en los que se entrenan procesos que se reviten muchas épocas en el tiempo que se compone fácilmente y no pueden llegar a un número de interacciones muy grande en un proceso y por lo tanto, errores de arrastre es importante

Esto puede ir creciendo y al final pasar con 0,3 o 0,4 parece poco pero al final es un tercio de error No es menor Ojo con eso Y por qué pasa esto? Porque el 0,1 en base 2, el final es su representación Ese número que está acá, es su representación Entonces esa representación binaria en base 2 al final nos genera que en vez de ser 0,3 nos genere ese valor Ahí les dejé un link para que vean en más detalle cómo era esa representación Ahí está el detalle de la representación y el proceso para quienes quieran verlo Dudas, consultas, hasta acá Esto es como motivación introductoria solamente, después vamos a ver específicamente cuáles son estas representaciones cómo se representan los números del telón, los flotantes, el exponente, la matiza, cuánto va indisto Lo van a ver en detalle porque cómo van a poder ir mejorando cada uno de estos

Entonces, la inteligencia artificial, algo que está muy luga Lo modelo de inteligencia artificial básicamente lo que hace es un proceso de entrenar donde en ese proceso de entrenamiento se le enseña hasta el gónero a ser algo Hoy estamos en el modelo de inteligencia artificial débil que tiene un propósito único O sea que entreno un modelo de retrobronar o lo que sea para reconocer personas Es un modelo de reconocimiento facial, puede ser un muy buen modelo, puede detectarlo a cada uno, que es incontenible ningún error O sea, puede ser un modelo de reconociencia de un motor, para detectar estaciones vacías, lo que se me ocurra, casas destruidas por huracanes, lo que ustedes quieran Pero es muy bueno en eso, si yo lo pongo un modelo de detección de cara, a detectar vehículos, no va a funcionar bien Lo pongo a generar textos, no lo voy a hacer porque son modelos de inteligencia artificial todavía débiles Se está trabajando en un modelo de inteligencia artificial general que se supone que debiera ser capaz de hacer todo Algunos decían que estaban como 25 años de eso, ahora dicen que están como a 5, algunos dicen que están como a 10 OpenAI, va en esa línea, buscar estos modelos de propósito general Y esos modelos, independiente del tipo de modelo, uno necesita entrenarlos Y ese proceso de entrenar es básicamente enseñarles, enseñarles a que hagan lo que nosotros queremos que hagan Detectar personas, detectar un objeto, predecir una tendencia, no hay que nada más Para eso se ocupan datos, y esos datos y ese proceso de entrenamiento no es un proceso, no es nada más que simplemente un proceso de optimización Donde se optimiza una función, y en este caso una función de costos Y esa función de costos está asociada con el error que está cometiendo mi modelo Yo quiero que mi modelo tenga un mejor resultado, por lo tanto, tengo que hacer que esa función de costos me minimiza Ya dice, yo la minimizo, voy a tener buenos resultados Y uno de los métodos que más se utiliza en el entrenamiento de redes neuronales, en inteligencia artificial Es el descenso del gradiente, y el descenso del gradiente lo que hace es básicamente optimizar los pesos Entonces, eso es todo sabe, pero las redes neuronales, todas las conocemos, son estructuras, donde tenemos nodos que están en capas Y esos nodos en cada una de las capas tienen conexiones

Y ahí con una malla de conexiones

Y en qué consiste entrenar un modelo de inteligencia artificial, cada una de estas conexiones tiene un peso, un doble B Entrenar un modelo de red neural, o un modelo de inteligencia artificial, es básicamente encontrar los pesos, los valores de cada uno de esos doble B Que me permiten entender los mejores resultados, y por lo tanto disminuir esa función de costos Y esto, imagínense acá tenemos una red que tiene tres capas, una capa de entrada, una capa opuesta, y una capa de salida con dos neurolas Pero imagínense un modelo de inteligencia artificial generativa que tiene billones de parámetros O sea, billones de conexiones que hay que encontrar Y eso se hace con métodos numericos Entonces, hay algoritmos que nos permiten decir, ah este peso es cero, pero que esa conexión no sirve un año O este peso es no se licuosa Y ese proceso de entrenar a la red, que es básicamente ajustar esos valores, es lo que se hace con algoritmos como el descenso del gradiente, la propagator y todo eso Y ese método del descenso del gradiente lo que busca es que a medida que la red va aprendiendo, ir bajando en esta función de costos, que es la función de error, para llegar al mínimo Igual es la lógica que ocupa ese algoritmo, es como que yo estoy parado en un cerro y necesito llegar a la parte más baja de esa sala Pero no es tan fácil como decir, ah está la mazhama de empina y bajo por ahí bajo más rápido Sino que este empinista que está acá está ciego, entonces está ciego y tiene que ver donde va avanzando Y mueve la patita para adelante, ve cual es la inclinación y va avanzando Entonces este método del gradiente va buscando cuál es la pendiente por la que puedo descender más rápido Pero ahí hay otras cosas, el atrasa de aprendizaje, otras cuestiones que nos permiten ir mejorando, pero un poco esa es la lógica Cómo yo bajo de la forma más rápida esta pendiente para llegar al mínimo Lo que uno busca cuando entreno un modelo es que el error sea lo más bajo posible y por lo tanto minimizar esa función Entonces, en algoritmos como este, uno de ellos es descensoría Entonces acá una función simple usando este algoritmo Ahí tenemos nuestra función de costo, fnx, fnx al cuadrado, 2x más uno, cualquier función puede ser lo que queramos La derivada de eso, fnx más 2, es la derivada de la miniatura de la multada Y después el recenso del gradiente, vamos a tomar un valor inicial, igual 10, una tasa de aprendizaje Y después vamos a ir viendo que son cada uno de estos parámetros Y vamos guardando el valor de ellos y vamos iterando, en este caso vamos a hacer 20 iteraciones para ir bajando Y vamos a ir viendo la visualización de cómo vamos construyendo esta función de un Entonces, si ejecutamos eso, lo que obtenemos es esto que está acá Esa es nuestra función de costos, echamos un cierto valor, entonces lo que vamos viendo es cómo bajamos esa función de costos Ahí había un parámetro que es learning radius, si yo avanzo, ¿cuánto voy a avanzar? Si yo doy un paso muy grande, lo hago más rápido, lo bajo más rápido, entonces es un paso grande para avanzar más rápido Si doy un paso más chiquitito, voy a avanzar menos Entonces acá también se juega con estos valores porque si yo doy un paso muy grande, siempre estoy dando pasos muy grandes Voy a llegar en un momento en que quizá nunca voy a llegar a mi mínimo ¿Por qué? Porque voy a quedar dando bote entre un lado y el otro porque el paso siempre es muy grande Entonces paso de acá para acá y después me devuelvo para acá y estoy siempre así Entonces los learning radius son más lentos porque cada vez que voy avanzando, avanzo menos Pero con eso me aseguro que voy a ir convergiendo el valor mínimo Entonces si se les fijan, acá los pasos son más grandes, ¿por qué? Porque la pendiente es mayor Mi función de costos tiene una pendiente mayor, entonces independiente de que yo avance un poquito El paso que doy, si voy a avanzar hacia adelante una cierta distancia, pero en términos reales El paso que estoy dando es mucho más grande, el avance me culpa Yo estoy a medida como acá la pendiente va disminuyendo cada vez, los pasos son más lentos Pero al final logro convergernos esto al valor que quiero, al mínimo de la fuerza Y eso es lo que se busca cuando uno obtiene un modelo de learning radius Encontrar el valor mínimo de la función de costos Y estas son implementaciones que acá hicimos con esa función súper básica Pero en realidad son modelos mucho más complejos que son capaces de ir ajustando Millones de hiperparámetros dentro de un modelo Y eso se hace con algoritmos de métodos de lo mismo Dugas, consultas hasta acá

Ahí el descenso del gradiente, hay otro método también para ajustar los pesos Este es uno que es el nuevo utilizado, pero hay varios más Ajustan los parámetros de un modelo buscando el mínimo de la función de costos En realidad en neuronales este método permite encontrar los pesos óptimos para mejorar la precisión del modelo Si mi función de costos yo logro minimizarla, quiere decir que mi configuración de la red es la que produce el menor error Y si produce el menor error quiere decir que va a hacer predicciones mejores Va a hacer una clasificación mejor, por lo tanto cada vez que yo diga pero va a ser pero con una alta probabilidad Si estoy haciendo un modelo de regresión voy a poder predecir el valor de una variable continua con una mejor precisión con un menor error Y todo esto se hace con eso algoritmos ¿Cuáles son los problemas numéricos que uno se enfrenta cuando trabaja en problemas de inteligencia artificial? Mal ajuste de las tasas de aprendizaje, como les comentaba antes Cuando esa tasa de aprendizaje es muy grande, el paso va a ser muy grande Y el paso va a ser muy grande y por lo tanto en algún momento voy a quedar oscilando entre el valor y puede que nunca converja al mínimo que esté buscando Entonces puede ser que la optimización sea demasiado lenta, sea muy chica o puede ser rápida, que nunca converge el cual como bien Así que ahí uno tiene que jugar a cada teco de su parada Pero a los que le interese la parte de inteligencia artificial, ciencia de datos, ahí hay mucha exploración de pruebas y errores Entonces si hay muchos de pruebas y errores necesitamos que estos algoritmos funcionen bien, estén bien optimizados y los podemos ocupar de una manera buena Y obviamente lo que habíamos visto, errores de precisión Acá tenemos cada uno de estas configuraciones de un arranque neuronal Se puede representar como problemas matriciales Es más, conocen TensorFlow, un framework que se inventó, PAMUEL, trabajar entrenando renes neuronales Por el problema que implicaba el manejo de estos pensores, matrices Entonces trabajar con matrices grandes, acá tenemos matrices chicas que representan la configuración de esa red Pero cuando tenemos cento de neuronas con cento de capas, mil de neuronas con mil de capas, al final eso se transforma en matrices n-dimensionales muy grandes Por lo tanto muy complejas de manejar y por lo tanto errores de arrastre y errores de precisión que son importantes Así que ahí hay un tema legal que siempre es importante que está abierto en este tipo de cosas

Métodos numéricos en videojuegos y simulación física En videojuegos se usan ecuaciones diferenciales para simular el movimiento de objetos Un método común y que nos va a mover en detalles es Euler, que aproxima la trayectoria de un objeto Entonces ahí puede sober ecuaciones que representan la física o que nos permitan simular e importar Acá veamos un ejemplo de simulación de caída libre Todos pasaron física allá, no?

Acabamos de simular una caída libre utilizando Euler Pasó el tiempo en delta t0,01, la gravedad 9.81, la velocidad inicial es 0 y la altura inicial es igual 100 Tenemos nuestros datos iniciales, un arreglo para las posiciones del tiempo, en t igual 0 y ahí tenemos nuestro loop Mientras ahí se arrebente cero vamos a actualizar la velocidad, la posición y las vamos a ir guardando y después nos vamos a dar

Esto es super básico, a lo que van a tocar las ondas Pero a medida de los problemas que puedan solucionar

Ahí tenemos por ejemplo la simulación de la caída libre utilizando la formación de Euler Ahí tenemos la actitud en función del tiempo, por lo tanto podemos ir viendo cuánto se demora en llegar a la musica Y por eso es importante meterle física a los videojuegos y todo eso, es muy importante Así que cuando lleguen a San Maxx y estén trabajando La verde no salta, salta eh El método de Euler es lo que permite simular la dinámica de objetos videojuegos Sin embargo es poco preciso para pasos de tiempo grandes Porque se usa métodos de videojuegos como Unity o Unreal pero con técnicas mejoradas Entonces cosas como estas para Vario Producción son las que vamos a ver durante el video Entonces acá hay una pequeña actividad que el propio video tiene con nota Y dice, intenta recibir los siguientes ejercicios y dice Escribe un programa que sube a 0,01 100.000 veces con 4 videos esperados por el real ¿Cómo cambia el lemao si usas Float64 en vez de Float32? Y en el otro dice, implementa el descenso en gradientes pero para la función x al cubo menos 3x más 2 Y modifique el método de Euler para una pelota pero que rebota con propiciente de restitución 0,01 Tiene... aquí hay una petición, aquí hay 14 videos

Los primeros dos tienen junto el set de la petición y el set de la pelota Los primeros dos tienen junto el set de la pelota

Ay, no lo tengo ni descargado Yo no tengo instalado Python, que necesito instalar esto como... El uso de la petición que creen que ha hecho un poquito menos óptima velocidad pero reduce el error a la nueva época ¿Tú lo sigas? Sí, también con Float64, Float32 ¿Te faltan? No voy a hacer eso para ustedes

Chicos, para los que llegaron más tarde, la próxima clase va a ser el día jueves, ¿ya? La del mes por el se va a recuperar la próxima semana, en horario interior les va a avisar

Otra cosa importante administrativa mientras ustedes trabajan

En la modalidad trimestral no hay semana de aceptabilidad No hay semana de exigencia, es como la tienen tradicionalmente ustedes

Tenemos 12 semanas de clase, o una semana de vacaciones Entre cada trimestre ¿Eso implica quiénes? Los que se exhiban van a tener 2 semanas Porque van a tener la semana de examen ¿Hay exhibición aquí? Todos los puestos tienen exhibición ¿Acepto exigencia? ¿Acepto exigencia? ¿Ah? Así es

Las fechas de los certámenes o las evaluaciones que van a hacer los profes Se las van a indicar y van a hacer, normalmente, en horario de clase A menos que se defina algo especial en algún horario que se necesite tener una vez Ya, pero, ojo con eso No hay semana de certámenes tradicionales como las que ustedes conocían hasta el año pasado Es un desfoto Lo otro, ya se lo he dicho a los alumnos del primer año A los de seguridad, a los viejones que son ustedes Cualquier boda, consulta, problema que tengan Levantenlo a ti mismo

Todos los que tengan problemas con algún ramo, con la inscripción de alguna cosa El momento en que llegue a entrar ese problema es ahora No en 3 semanas más para que lleguen a entrar con nada que hacer con la inscripción de la cosa Así que por favor, si tienen dudas, si tienen consultas Si hay un ramo que la parece multiplicado Si hay un rango que no es, si hay un curso que no le aparece, etc. etc. Dirícanse a la facultad, pueden hablar con Daniela, pueden hablar con Álex Pueden hablar conmigo para darle una solución Nos pueden enviar correo, en el robot rápido Y óptimo es que vayan y abren con la diana Ya

Así, es que estaban bloqueando todo el medio rango Así que hoy día ya está en seguridad Así que todos los que tengan problemas, si tienen algún problema Vayan y abren con la Daniela, si están muy ocupados escriban un correo Y les voy a enviar ahí Cualquier problema que tengan, diríjanse a conversar con nosotros Y háganlo a tiempo Problemas con la asignatura, problemas con un profe, problemas con un compañero Problemas con el mundo, levantenlo en el momento correcto No al final del semestre, cuando profe me falta una de esas y no me va a aprobar el curso Y resulta que en el septámetro 1, el profe no me dice revisar y ahí está una de esas y no me va a aprobar Eso no podemos hacer nada, así que por favor Ya Por favor, listo